{"version":3,"sources":["Logo2.svg","Components/NavigationUser.js","Components/Navigation.js","routes/Home.js","Components/Sidebar.js","routes/Myspace.js","routes/Signin.js","routes/Repository.js","App.js","index.js"],"names":["Navigation_User","user","logout","username","activeStyle","color","className","src","Logo","alt","exact","to","onClick","Navigation","Home","LeftbarPositioner","styled","div","LeftbarHeader","LeftbarBody","background","borderRadius","Sidebar","MakemainPositioner","Outputform","Inputform","Cololselector","Colorbuttons","Infotitle","Infoinputs","Infoinputposition","Infoinput","input","Introduceinput","textarea","Myspace","token","usertoken","useState","name","mail","corporate","position","phonenumber","officenumber","address","introduce","values","setValues","handleChange","e","target","value","handleClick","console","log","type","placeholder","onChange","Kakao","window","Signin","authenticated","login","gettoken","location","setUsername","setToken","useEffect","from","state","pathname","width","height","Auth","scope","success","authObj","access_token","API","request","url","res","kakao_account","profile","nickname","Repository","App","setUser","setuserToken","NavigationUser","path","component","render","props","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b2d99d16.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Logo2.79b8a6fb.svg\";","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Logo from \"../Logo2.svg\";\r\n\r\nfunction Navigation_User({user, logout}) {\r\n  // Signin.js -> App.js에서 받아온 사용자 카카오 닉네임 {user}와 App.js에서 선언한 logout함수를 인자로 받아온다.\r\n  const {username} = user || {};\r\n  // Signin.js -> App.js에서 받아온 사용자 카카오 닉네임 {user}를 {username}을 선언하여 {username}에 값을 넣어 관리한다.\r\n  const activeStyle = {\r\n    color: \"#A259FF\",\r\n  };\r\n\r\n  const handleClick = () => {\r\n    logout()\r\n  }\r\n\r\n  return (\r\n    // Nav- Start\r\n    <div className=\"Nav\">\r\n      <img src={Logo} alt=\"로고\" className=\"nav-logo\"></img>\r\n      <div className=\"nav-item\">\r\n        <NavLink exact to=\"/\" activeStyle={activeStyle}>\r\n          HOME\r\n        </NavLink>\r\n        <NavLink to=\"/myspace\" activeStyle={activeStyle}>\r\n          MY SPACE\r\n        </NavLink>\r\n        <NavLink exact to=\"/\" onClick={handleClick}>\r\n          LOGOUT\r\n        </NavLink>\r\n          {username}\r\n      </div>\r\n    </div>\r\n    //    Nav-End\r\n  );\r\n}\r\n\r\nexport default Navigation_User;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Logo from \"../Logo2.svg\";\r\n\r\nfunction Navigation() {\r\n  const activeStyle = {\r\n    color: \"#A259FF\",\r\n  };\r\n\r\n  return (\r\n    // Nav- Start\r\n    <div className=\"Nav\">\r\n      <img src={Logo} alt=\"로고\" className=\"nav-logo\"></img>\r\n      <div className=\"nav-item\">\r\n        <NavLink exact to=\"/\" activeStyle={activeStyle}>\r\n          HOME\r\n        </NavLink>\r\n        <NavLink to=\"/signin\" activeStyle={activeStyle}>\r\n          LOGIN\r\n        </NavLink>\r\n      </div>\r\n    </div>\r\n    //    Nav-End\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"Main\">\r\n      <div className=\"main-text\">\r\n        <p>지금 바로 </p>\r\n        <p>당신만의 명함을 만들어보세요!</p>\r\n      </div>\r\n      <Link to=\"/signin\" className=\"main-btn\">\r\n        GET STARTED!\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst LeftbarPositioner = styled.div`\r\n  width: 7rem;\r\n  height: 100vh;\r\n`;\r\n\r\nconst LeftbarHeader = styled.div`\r\n  text-align: center;\r\n  padding-bottom: 0.5rem;\r\n  border-bottom: solid black;\r\n  margin-top: 1rem;\r\n  color: #a259ff;\r\n`;\r\n\r\nconst LeftbarBody = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-align: center;\r\n  margin-top: 1rem;\r\n  border-style: solid;\r\n`;\r\n\r\nconst activeStyle = {\r\n  background: \"#DBBEFF\",\r\n  borderRadius: \"7px\",\r\n};\r\n\r\nfunction Sidebar() {\r\n  return (\r\n    <LeftbarPositioner>\r\n      <LeftbarHeader>MY SPACE</LeftbarHeader>\r\n      <LeftbarBody>\r\n        <NavLink\r\n          exact\r\n          to=\"/myspace\"\r\n          activeStyle={activeStyle}\r\n          className=\"Sidebaritem\"\r\n        >\r\n          명함만들기\r\n        </NavLink>\r\n        <NavLink\r\n          to=\"/myspace/repository\"\r\n          activeStyle={activeStyle}\r\n          className=\"Sidebaritem\"\r\n        >\r\n          명함보관함\r\n        </NavLink>\r\n      </LeftbarBody>\r\n    </LeftbarPositioner>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Sidebar from \"../Components/Sidebar\";\r\n\r\n//명함 만들기 main 화면\r\nconst MakemainPositioner = styled.div`\r\n  display: flex;\r\n`;\r\n// 출력폼\r\nconst Outputform = styled.div`\r\n  border-style: solid;\r\n  width: 50%;\r\n  height: 100vh;\r\n  margin-top: 1rem;\r\n`;\r\n\r\n// 입력폼\r\nconst Inputform = styled.div`\r\n  border-style: solid;\r\n  width: 50%;\r\n  height: 100vh;\r\n  margin-top: 1rem;\r\n`;\r\n// 명함 컬러 선택하기\r\nconst Cololselector = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 20px;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst Colorbuttons = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 100%;\r\n`;\r\n\r\n// 기본 정보 입력하기\r\nconst Infotitle = styled.div`\r\n  display: flex;\r\n  height: 40px;\r\n  justify-content: center;\r\n  font-size: 20px;\r\n  margin-top: 1rem;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst Infoinputs = styled.div`\r\n  display: flex;\r\n  align-items: flex-end;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Infoinputposition = styled.div``;\r\n\r\nconst Infoinput = styled.input`\r\n  width: 500px;\r\n  font-size: 15px;\r\n  margin-top: 0.5rem;\r\n  margin-left: 2rem;\r\n  margin-right: 8rem;\r\n  border-radius: 15px;\r\n`;\r\n\r\nconst Introduceinput = styled.textarea`\r\n  width: 500px;\r\n  height: 230px;\r\n  font-size: 15px;\r\n  margin-top: 1rem;\r\n  margin-left: 2rem;\r\n  margin-right: 8rem;\r\n  border-radius: 15px;\r\n`;\r\n\r\nfunction Myspace({ usertoken }) {\r\n  const { token } = usertoken || {}; // App.js에서 token값 가져오기\r\n\r\n  const [values, setValues] = useState({\r\n    token: token,\r\n    color: \"\",\r\n    name: \"\",\r\n    mail: \"\",\r\n    corporate: \"\",\r\n    position: \"\",\r\n    phonenumber: \"\",\r\n    officenumber: \"\",\r\n    address: \"\",\r\n    introduce: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    // Basicinfo input eventhandle function\r\n    const { name, value } = e.target;\r\n    setValues({ ...values, [name]: value });\r\n  };\r\n\r\n  const handleClick = (e) => {\r\n    // Colorselect button eventhandle function\r\n    const { name, value } = e.target;\r\n    setValues({ ...values, [name]: value });\r\n  };\r\n\r\n  console.log(values);\r\n\r\n  return (\r\n    <MakemainPositioner>\r\n      <Sidebar />\r\n      <Outputform> 안녕 </Outputform>\r\n      <Inputform>\r\n        <Cololselector>\r\n          명함 컬러 선택하기\r\n          <Colorbuttons>\r\n            <button name=\"color\" value=\"red\" onClick={handleClick}>\r\n              빨강\r\n            </button>\r\n            <button name=\"color\" value=\"orange\" onClick={handleClick}>\r\n              주황\r\n            </button>\r\n            <button name=\"color\" value=\"yellow\" onClick={handleClick}>\r\n              노랑\r\n            </button>\r\n            <button name=\"color\" value=\"blue\" onClick={handleClick}>\r\n              파랑\r\n            </button>\r\n          </Colorbuttons>\r\n        </Cololselector>\r\n        <Infotitle>기본 정보 입력하기</Infotitle>\r\n        <Infoinputs>\r\n          <Infoinputposition>\r\n            <label>이름</label>\r\n            <Infoinput\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={values.name}\r\n              placeholder=\"   이름을 입력하세요\"\r\n              onChange={handleChange}\r\n            />\r\n          </Infoinputposition>\r\n          <Infoinputposition>\r\n            <lable>메일주소</lable>\r\n            <Infoinput\r\n              type=\"text\"\r\n              name=\"mail\"\r\n              value={values.mail}\r\n              placeholder=\"   e-mail을 입력하세요\"\r\n              onChange={handleChange}\r\n            />\r\n          </Infoinputposition>\r\n        </Infoinputs>\r\n        <Infotitle>추가 정보 입력하기</Infotitle>\r\n        <Infoinputs>\r\n          <Infoinputposition>\r\n            <label>회사명</label>\r\n            <Infoinput\r\n              type=\"text\"\r\n              name=\"corporate\"\r\n              value={values.corporate}\r\n              placeholder=\"   회사명을 입력하세요\"\r\n              onChange={handleChange}\r\n            />\r\n          </Infoinputposition>\r\n          <Infoinputposition>\r\n            <lable>직급</lable>\r\n            <Infoinput\r\n              type=\"text\"\r\n              name=\"position\"\r\n              value={values.position}\r\n              placeholder=\"   직급을 입력하세요\"\r\n              onChange={handleChange}\r\n            />\r\n          </Infoinputposition>\r\n          <Infoinputposition>\r\n            <lable>휴대폰번호</lable>\r\n            <Infoinput\r\n              type=\"text\"\r\n              name=\"phonenumber\"\r\n              value={values.phonenumber}\r\n              placeholder=\"   휴대폰번호를 입력하세요(010-XXXX-XXXX)\"\r\n              onChange={handleChange}\r\n            />\r\n          </Infoinputposition>\r\n          <Infoinputposition>\r\n            <lable>전화번호</lable>\r\n            <Infoinput\r\n              type=\"text\"\r\n              name=\"officenumber\"\r\n              value={values.officenumber}\r\n              placeholder=\"   전화번호를 입력하세요(02-XXX-XXXX)\"\r\n              onChange={handleChange}\r\n            />\r\n          </Infoinputposition>\r\n          <Infoinputposition>\r\n            <lable>주소</lable>\r\n            <Infoinput\r\n              type=\"text\"\r\n              name=\"address\"\r\n              value={values.address}\r\n              placeholder=\"   주소를 입력하세요\"\r\n              onChange={handleChange}\r\n            />\r\n          </Infoinputposition>\r\n          <Infoinputposition>\r\n            <lable>소개</lable>\r\n            <Introduceinput\r\n              type=\"text\"\r\n              name=\"introduce\"\r\n              value={values.introduce}\r\n              placeholder=\"   나를 설명할 수 있는 소개글을 작성해보세요\"\r\n              onChange={handleChange}\r\n            />\r\n          </Infoinputposition>\r\n        </Infoinputs>\r\n      </Inputform>\r\n    </MakemainPositioner>\r\n  );\r\n}\r\n\r\nexport default Myspace;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Logo from \"../Logo2.svg\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst { Kakao } = window;\r\n\r\nfunction Signin({ authenticated, login, gettoken, location }) {\r\n  // authenticated(state: 로그인 인증), login(function: username state를 App.js로 넘겨줌)\r\n  const [username, setUsername] = useState(\"\");\r\n  const [token, setToken] = useState(\"\");\r\n  // 카카오 로그인 api에서 사용자 정보 중 nickname만 setUsername으로 빼내서 state 관리\r\n  const kakaoLoginClickHandler = () => {\r\n    //카카오 로그인 api\r\n    Kakao.Auth.login({\r\n      scope: \"profile, account_email, gender\",\r\n      success: function (authObj) {\r\n        //토큰\r\n        setToken(authObj.access_token);\r\n        Kakao.API.request({\r\n          url: \"/v2/user/me\",\r\n          success: (res) => {\r\n            // res.kakao_account (사용자 정보)\r\n            setUsername(res.kakao_account.profile.nickname);\r\n          }, // Kakao.API.request.success - end\r\n        }); // Kakao.API.request - end\r\n      }, // Kakao.Auth.login.success - end\r\n    }); // Kakao.Auth.login - end\r\n  }; // kakaoLoginClickHandler - end (카카오 로그인 api - end)\r\n  useEffect(() => {\r\n    //username state의 값이 변하게 되면 login({username})을 실행\r\n    return () => login({ username });\r\n  }, [username]);\r\n\r\n  useEffect(() => {\r\n    //token state의 값이 변하게 되면 gettoken({token})을 실행\r\n    return () => gettoken({ token });\r\n  }, [token]);\r\n\r\n  // authenticated(boolean: 사용자 로그인 여부)의 값이 true일이면 \"/\"위치(Home,js)로 이동\r\n  const { from } = location.state || { from: { pathname: \"/\" } };\r\n  if (authenticated) return <Redirect to={from} />;\r\n\r\n  return (\r\n    <div className=\"Main-sign\">\r\n      <div className=\"sign-logo\">\r\n        <img src={Logo} alt=\"로고\" width=\"300px\" height=\"200px\" />\r\n      </div>\r\n\r\n      <div className=\"sign-text\">\r\n        <p> 지금 회원가입하시면 </p>\r\n        <p> 명함이 5초만에 뚝딱!</p>\r\n      </div>\r\n      <button className=\"sign-btn\" onClick={kakaoLoginClickHandler}>\r\n        {\" \"}\r\n      </button>\r\n      <Link to=\"/signin\" className=\"sign-btn2\">\r\n        카카오 계정으로 <u>신규 가입하기</u>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signin;\r\n","import React from \"react\";\r\nimport Sidebar from \"../Components/Sidebar\";\r\n\r\nfunction Repository() {\r\n  return (\r\n    <div>\r\n     <Sidebar />\r\n     \r\n      Repository페이지\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Repository;","import React, { useState, useEffect } from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport css from \"./App.css\";\n\nimport NavigationUser from \"./Components/NavigationUser\";\nimport Navigation from \"./Components/Navigation\";\nimport Home from \"./routes/Home\";\nimport Myspace from \"./routes/Myspace\";\nimport Signin from \"./routes/Signin\";\nimport Repository from \"./routes/Repository\";\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  // login({username})의 함수를 통해 Signin.js에서 username을 가져와 setUser을 통해 상태관리\n  const authenticated = user != null; // 사용자 로그인 인증\n\n  const [usertoken, setuserToken] = useState(null); //위와 같은 login으로 token값을 가져옴\n  const gettoken = ({ token }) => setuserToken({ token });\n\n  const login = ({ username }) => setUser({ username });\n  const logout = () => setUser(null);\n\n  return (\n    <>\n      <HashRouter>\n        {authenticated ? ( //사용자가 로그인 O\n          <NavigationUser user={user} logout={logout} /> //사용자의 카카오 닉네임을 받아온 user(state)와 logout함수를 인자로 보내준다.\n        ) : (\n          // 사용자가 로그인 X\n          <Navigation />\n        )}\n        <Route path=\"/\" exact={true} component={Home} /> {/* HOME 화면 */}\n        <Route\n          path=\"/myspace\"\n          render={(props) => <Myspace usertoken={usertoken} {...props} />}\n        />\n        {/* MY SPACE(명함만들기) 화면 */}\n        <Route path=\"/myspace/repository\" component={Repository} />\n        {/* REPOSITORY(명함보관함) 화면 */}\n        <Route\n          path=\"/signin\"\n          render={(props) => (\n            <Signin\n              authenticated={authenticated}\n              login={login}\n              gettoken={gettoken}\n              {...props}\n            />\n          )} // Signin(로그인)을 렌더링할때 authenticated(사용자 로그인 여부)와 login(카카오 로그인 api에서 사용자 닉네임을 받아오기 위한 함수)를 인자로 보내준다.\n        />\n      </HashRouter>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}